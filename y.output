Terminals unused in grammar

   SVAL
   COLON
   SWITCH
   CASE
   DEFAULT
   NOT


Grammar

    0 $accept: program $end

    1 expression: assignment_expression
    2           | logical_or_expression
    3           | expression COMMA assignment_expression
    4           | expression COMMA logical_or_expression

    5 assignment_expression: ID_E ASSIGN logical_or_expression
    6                      | ID_E ASSIGN assignment_expression
    7                      | ID_E LSB expression RSB ASSIGN logical_or_expression
    8                      | ID_E LSB expression RSB ASSIGN assignment_expression

    9 primary_expression: ID_E
   10                   | IVAL
   11                   | FVAL
   12                   | CVAL
   13                   | LP expression RP
   14                   | SIZEOF LP type_specifier RP

   15 multiplicative_expression: primary_expression
   16                          | multiplicative_expression MUL primary_expression
   17                          | multiplicative_expression DIV primary_expression
   18                          | multiplicative_expression MOD primary_expression

   19 additive_expression: multiplicative_expression
   20                    | additive_expression PLUS multiplicative_expression
   21                    | additive_expression MINUS multiplicative_expression

   22 relational_expression: additive_expression
   23                      | relational_expression LT additive_expression
   24                      | relational_expression GT additive_expression
   25                      | relational_expression LE additive_expression
   26                      | relational_expression GE additive_expression

   27 equality_expression: relational_expression
   28                    | equality_expression EQ relational_expression
   29                    | equality_expression NE relational_expression

   30 logical_and_expression: equality_expression
   31                       | logical_and_expression AND equality_expression

   32 logical_or_expression: logical_and_expression
   33                      | logical_or_expression OR logical_and_expression

   34 declaration: type_specifier init_declarator_list SEMI

   35 type_specifier: INT
   36               | FLOAT
   37               | CHAR

   38 init_declarator_list: init_declarator
   39                     | init_declarator_list COMMA init_declarator

   40 init_declarator: ID_D

   41 statement: compound_statement
   42          | expression_statement
   43          | selection_statement
   44          | iteration_statement
   45          | jump_statement

   46 compound_statement: LCB RCB
   47                   | LCB block_item_list RCB

   48 block_item_list: block_item
   49                | block_item_list block_item

   50 block_item: declaration
   51           | statement

   52 expression_statement: SEMI
   53                     | expression SEMI

   54 selection_statement: IF LP expression RP statement ELSE statement

   55 iteration_statement: WHILE LP expression RP statement
   56                    | FOR LP expression_statement expression_statement expression RP statement

   57 jump_statement: CONTINUE SEMI
   58               | BREAK SEMI
   59               | RETURN SEMI
   60               | RETURN expression SEMI

   61 program: translation_unit

   62 translation_unit: external_declaration
   63                 | translation_unit external_declaration

   64 external_declaration: function_definition
   65                     | declaration

   66 function_definition: type_specifier ID_D LP parameter_list RP declaration_list compound_statement
   67                    | type_specifier ID_D LP parameter_list RP compound_statement

   68 parameter_list: parameter_declaration
   69               | parameter_list COMMA parameter_declaration

   70 parameter_declaration: type_specifier ID_D

   71 declaration_list: declaration
   72                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
error (256)
IVAL (258) 10
CVAL (259) 12
FVAL (260) 11
SVAL (261)
INT (262) 35
FLOAT (263) 36
CHAR (264) 37
ID_D (265) 40 66 67 70
ID_E (266) 5 6 7 8 9
LP (267) 13 14 54 55 56 66 67
RP (268) 13 14 54 55 56 66 67
LCB (269) 46 47
RCB (270) 46 47
LSB (271) 7 8
RSB (272) 7 8
SEMI (273) 34 52 53 57 58 59 60
COMMA (274) 3 4 39 69
COLON (275)
IF (276) 54
ELSE (277) 54
WHILE (278) 55
FOR (279) 56
BREAK (280) 58
RETURN (281) 59 60
ASSIGN (282) 5 6 7 8
SWITCH (283)
CONTINUE (284) 57
CASE (285)
DEFAULT (286)
SIZEOF (287) 14
PLUS (288) 20
MINUS (289) 21
MUL (290) 16
DIV (291) 17
MOD (292) 18
AND (293) 31
OR (294) 33
NOT (295)
GE (296) 26
LE (297) 25
NE (298) 29
EQ (299) 28
GT (300) 24
LT (301) 23


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
expression (48)
    on left: 1 2 3 4, on right: 3 4 7 8 13 53 54 55 56 60
assignment_expression (49)
    on left: 5 6 7 8, on right: 1 3 6 8
primary_expression (50)
    on left: 9 10 11 12 13 14, on right: 15 16 17 18
multiplicative_expression (51)
    on left: 15 16 17 18, on right: 16 17 18 19 20 21
additive_expression (52)
    on left: 19 20 21, on right: 20 21 22 23 24 25 26
relational_expression (53)
    on left: 22 23 24 25 26, on right: 23 24 25 26 27 28 29
equality_expression (54)
    on left: 27 28 29, on right: 28 29 30 31
logical_and_expression (55)
    on left: 30 31, on right: 31 32 33
logical_or_expression (56)
    on left: 32 33, on right: 2 4 5 7 33
declaration (57)
    on left: 34, on right: 50 65 71 72
type_specifier (58)
    on left: 35 36 37, on right: 14 34 66 67 70
init_declarator_list (59)
    on left: 38 39, on right: 34 39
init_declarator (60)
    on left: 40, on right: 38 39
statement (61)
    on left: 41 42 43 44 45, on right: 51 54 55 56
compound_statement (62)
    on left: 46 47, on right: 41 66 67
block_item_list (63)
    on left: 48 49, on right: 47 49
block_item (64)
    on left: 50 51, on right: 48 49
expression_statement (65)
    on left: 52 53, on right: 42 56
selection_statement (66)
    on left: 54, on right: 43
iteration_statement (67)
    on left: 55 56, on right: 44
jump_statement (68)
    on left: 57 58 59 60, on right: 45
program (69)
    on left: 61, on right: 0
translation_unit (70)
    on left: 62 63, on right: 61 63
external_declaration (71)
    on left: 64 65, on right: 62 63
function_definition (72)
    on left: 66 67, on right: 64
parameter_list (73)
    on left: 68 69, on right: 66 67 69
parameter_declaration (74)
    on left: 70, on right: 68 69
declaration_list (75)
    on left: 71 72, on right: 66 72


state 0

    0 $accept: . program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    declaration           go to state 4
    type_specifier        go to state 5
    program               go to state 6
    translation_unit      go to state 7
    external_declaration  go to state 8
    function_definition   go to state 9


state 1

   35 type_specifier: INT .

    $default  reduce using rule 35 (type_specifier)


state 2

   36 type_specifier: FLOAT .

    $default  reduce using rule 36 (type_specifier)


state 3

   37 type_specifier: CHAR .

    $default  reduce using rule 37 (type_specifier)


state 4

   65 external_declaration: declaration .

    $default  reduce using rule 65 (external_declaration)


state 5

   34 declaration: type_specifier . init_declarator_list SEMI
   66 function_definition: type_specifier . ID_D LP parameter_list RP declaration_list compound_statement
   67                    | type_specifier . ID_D LP parameter_list RP compound_statement

    ID_D  shift, and go to state 10

    init_declarator_list  go to state 11
    init_declarator       go to state 12


state 6

    0 $accept: program . $end

    $end  shift, and go to state 13


state 7

   61 program: translation_unit .
   63 translation_unit: translation_unit . external_declaration

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    $default  reduce using rule 61 (program)

    declaration           go to state 4
    type_specifier        go to state 5
    external_declaration  go to state 14
    function_definition   go to state 9


state 8

   62 translation_unit: external_declaration .

    $default  reduce using rule 62 (translation_unit)


state 9

   64 external_declaration: function_definition .

    $default  reduce using rule 64 (external_declaration)


state 10

   40 init_declarator: ID_D .
   66 function_definition: type_specifier ID_D . LP parameter_list RP declaration_list compound_statement
   67                    | type_specifier ID_D . LP parameter_list RP compound_statement

    LP  shift, and go to state 15

    $default  reduce using rule 40 (init_declarator)


state 11

   34 declaration: type_specifier init_declarator_list . SEMI
   39 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMI   shift, and go to state 16
    COMMA  shift, and go to state 17


state 12

   38 init_declarator_list: init_declarator .

    $default  reduce using rule 38 (init_declarator_list)


state 13

    0 $accept: program $end .

    $default  accept


state 14

   63 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 63 (translation_unit)


state 15

   66 function_definition: type_specifier ID_D LP . parameter_list RP declaration_list compound_statement
   67                    | type_specifier ID_D LP . parameter_list RP compound_statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    type_specifier         go to state 18
    parameter_list         go to state 19
    parameter_declaration  go to state 20


state 16

   34 declaration: type_specifier init_declarator_list SEMI .

    $default  reduce using rule 34 (declaration)


state 17

   39 init_declarator_list: init_declarator_list COMMA . init_declarator

    ID_D  shift, and go to state 21

    init_declarator  go to state 22


state 18

   70 parameter_declaration: type_specifier . ID_D

    ID_D  shift, and go to state 23


state 19

   66 function_definition: type_specifier ID_D LP parameter_list . RP declaration_list compound_statement
   67                    | type_specifier ID_D LP parameter_list . RP compound_statement
   69 parameter_list: parameter_list . COMMA parameter_declaration

    RP     shift, and go to state 24
    COMMA  shift, and go to state 25


state 20

   68 parameter_list: parameter_declaration .

    $default  reduce using rule 68 (parameter_list)


state 21

   40 init_declarator: ID_D .

    $default  reduce using rule 40 (init_declarator)


state 22

   39 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 39 (init_declarator_list)


state 23

   70 parameter_declaration: type_specifier ID_D .

    $default  reduce using rule 70 (parameter_declaration)


state 24

   66 function_definition: type_specifier ID_D LP parameter_list RP . declaration_list compound_statement
   67                    | type_specifier ID_D LP parameter_list RP . compound_statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    LCB    shift, and go to state 26

    declaration         go to state 27
    type_specifier      go to state 28
    compound_statement  go to state 29
    declaration_list    go to state 30


state 25

   69 parameter_list: parameter_list COMMA . parameter_declaration

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    type_specifier         go to state 18
    parameter_declaration  go to state 31


state 26

   46 compound_statement: LCB . RCB
   47                   | LCB . block_item_list RCB

    IVAL      shift, and go to state 32
    CVAL      shift, and go to state 33
    FVAL      shift, and go to state 34
    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    ID_E      shift, and go to state 35
    LP        shift, and go to state 36
    LCB       shift, and go to state 26
    RCB       shift, and go to state 37
    SEMI      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    FOR       shift, and go to state 41
    BREAK     shift, and go to state 42
    RETURN    shift, and go to state 43
    CONTINUE  shift, and go to state 44
    SIZEOF    shift, and go to state 45

    expression                 go to state 46
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54
    declaration                go to state 55
    type_specifier             go to state 28
    statement                  go to state 56
    compound_statement         go to state 57
    block_item_list            go to state 58
    block_item                 go to state 59
    expression_statement       go to state 60
    selection_statement        go to state 61
    iteration_statement        go to state 62
    jump_statement             go to state 63


state 27

   71 declaration_list: declaration .

    $default  reduce using rule 71 (declaration_list)


state 28

   34 declaration: type_specifier . init_declarator_list SEMI

    ID_D  shift, and go to state 21

    init_declarator_list  go to state 11
    init_declarator       go to state 12


state 29

   67 function_definition: type_specifier ID_D LP parameter_list RP compound_statement .

    $default  reduce using rule 67 (function_definition)


state 30

   66 function_definition: type_specifier ID_D LP parameter_list RP declaration_list . compound_statement
   72 declaration_list: declaration_list . declaration

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    LCB    shift, and go to state 26

    declaration         go to state 64
    type_specifier      go to state 28
    compound_statement  go to state 65


state 31

   69 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 69 (parameter_list)


state 32

   10 primary_expression: IVAL .

    $default  reduce using rule 10 (primary_expression)


state 33

   12 primary_expression: CVAL .

    $default  reduce using rule 12 (primary_expression)


state 34

   11 primary_expression: FVAL .

    $default  reduce using rule 11 (primary_expression)


state 35

    5 assignment_expression: ID_E . ASSIGN logical_or_expression
    6                      | ID_E . ASSIGN assignment_expression
    7                      | ID_E . LSB expression RSB ASSIGN logical_or_expression
    8                      | ID_E . LSB expression RSB ASSIGN assignment_expression
    9 primary_expression: ID_E .

    LSB     shift, and go to state 66
    ASSIGN  shift, and go to state 67

    $default  reduce using rule 9 (primary_expression)


state 36

   13 primary_expression: LP . expression RP

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    expression                 go to state 68
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54


state 37

   46 compound_statement: LCB RCB .

    $default  reduce using rule 46 (compound_statement)


state 38

   52 expression_statement: SEMI .

    $default  reduce using rule 52 (expression_statement)


state 39

   54 selection_statement: IF . LP expression RP statement ELSE statement

    LP  shift, and go to state 69


state 40

   55 iteration_statement: WHILE . LP expression RP statement

    LP  shift, and go to state 70


state 41

   56 iteration_statement: FOR . LP expression_statement expression_statement expression RP statement

    LP  shift, and go to state 71


state 42

   58 jump_statement: BREAK . SEMI

    SEMI  shift, and go to state 72


state 43

   59 jump_statement: RETURN . SEMI
   60               | RETURN . expression SEMI

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SEMI    shift, and go to state 73
    SIZEOF  shift, and go to state 45

    expression                 go to state 74
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54


state 44

   57 jump_statement: CONTINUE . SEMI

    SEMI  shift, and go to state 75


state 45

   14 primary_expression: SIZEOF . LP type_specifier RP

    LP  shift, and go to state 76


state 46

    3 expression: expression . COMMA assignment_expression
    4           | expression . COMMA logical_or_expression
   53 expression_statement: expression . SEMI

    SEMI   shift, and go to state 77
    COMMA  shift, and go to state 78


state 47

    1 expression: assignment_expression .

    $default  reduce using rule 1 (expression)


state 48

   15 multiplicative_expression: primary_expression .

    $default  reduce using rule 15 (multiplicative_expression)


state 49

   16 multiplicative_expression: multiplicative_expression . MUL primary_expression
   17                          | multiplicative_expression . DIV primary_expression
   18                          | multiplicative_expression . MOD primary_expression
   19 additive_expression: multiplicative_expression .

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 19 (additive_expression)


state 50

   20 additive_expression: additive_expression . PLUS multiplicative_expression
   21                    | additive_expression . MINUS multiplicative_expression
   22 relational_expression: additive_expression .

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 22 (relational_expression)


state 51

   23 relational_expression: relational_expression . LT additive_expression
   24                      | relational_expression . GT additive_expression
   25                      | relational_expression . LE additive_expression
   26                      | relational_expression . GE additive_expression
   27 equality_expression: relational_expression .

    GE  shift, and go to state 84
    LE  shift, and go to state 85
    GT  shift, and go to state 86
    LT  shift, and go to state 87

    $default  reduce using rule 27 (equality_expression)


state 52

   28 equality_expression: equality_expression . EQ relational_expression
   29                    | equality_expression . NE relational_expression
   30 logical_and_expression: equality_expression .

    NE  shift, and go to state 88
    EQ  shift, and go to state 89

    $default  reduce using rule 30 (logical_and_expression)


state 53

   31 logical_and_expression: logical_and_expression . AND equality_expression
   32 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 90

    $default  reduce using rule 32 (logical_or_expression)


state 54

    2 expression: logical_or_expression .
   33 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 91

    $default  reduce using rule 2 (expression)


state 55

   50 block_item: declaration .

    $default  reduce using rule 50 (block_item)


state 56

   51 block_item: statement .

    $default  reduce using rule 51 (block_item)


state 57

   41 statement: compound_statement .

    $default  reduce using rule 41 (statement)


state 58

   47 compound_statement: LCB block_item_list . RCB
   49 block_item_list: block_item_list . block_item

    IVAL      shift, and go to state 32
    CVAL      shift, and go to state 33
    FVAL      shift, and go to state 34
    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    ID_E      shift, and go to state 35
    LP        shift, and go to state 36
    LCB       shift, and go to state 26
    RCB       shift, and go to state 92
    SEMI      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    FOR       shift, and go to state 41
    BREAK     shift, and go to state 42
    RETURN    shift, and go to state 43
    CONTINUE  shift, and go to state 44
    SIZEOF    shift, and go to state 45

    expression                 go to state 46
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54
    declaration                go to state 55
    type_specifier             go to state 28
    statement                  go to state 56
    compound_statement         go to state 57
    block_item                 go to state 93
    expression_statement       go to state 60
    selection_statement        go to state 61
    iteration_statement        go to state 62
    jump_statement             go to state 63


state 59

   48 block_item_list: block_item .

    $default  reduce using rule 48 (block_item_list)


state 60

   42 statement: expression_statement .

    $default  reduce using rule 42 (statement)


state 61

   43 statement: selection_statement .

    $default  reduce using rule 43 (statement)


state 62

   44 statement: iteration_statement .

    $default  reduce using rule 44 (statement)


state 63

   45 statement: jump_statement .

    $default  reduce using rule 45 (statement)


state 64

   72 declaration_list: declaration_list declaration .

    $default  reduce using rule 72 (declaration_list)


state 65

   66 function_definition: type_specifier ID_D LP parameter_list RP declaration_list compound_statement .

    $default  reduce using rule 66 (function_definition)


state 66

    7 assignment_expression: ID_E LSB . expression RSB ASSIGN logical_or_expression
    8                      | ID_E LSB . expression RSB ASSIGN assignment_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    expression                 go to state 94
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54


state 67

    5 assignment_expression: ID_E ASSIGN . logical_or_expression
    6                      | ID_E ASSIGN . assignment_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    assignment_expression      go to state 95
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 96


state 68

    3 expression: expression . COMMA assignment_expression
    4           | expression . COMMA logical_or_expression
   13 primary_expression: LP expression . RP

    RP     shift, and go to state 97
    COMMA  shift, and go to state 78


state 69

   54 selection_statement: IF LP . expression RP statement ELSE statement

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    expression                 go to state 98
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54


state 70

   55 iteration_statement: WHILE LP . expression RP statement

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    expression                 go to state 99
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54


state 71

   56 iteration_statement: FOR LP . expression_statement expression_statement expression RP statement

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SEMI    shift, and go to state 38
    SIZEOF  shift, and go to state 45

    expression                 go to state 46
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54
    expression_statement       go to state 100


state 72

   58 jump_statement: BREAK SEMI .

    $default  reduce using rule 58 (jump_statement)


state 73

   59 jump_statement: RETURN SEMI .

    $default  reduce using rule 59 (jump_statement)


state 74

    3 expression: expression . COMMA assignment_expression
    4           | expression . COMMA logical_or_expression
   60 jump_statement: RETURN expression . SEMI

    SEMI   shift, and go to state 101
    COMMA  shift, and go to state 78


state 75

   57 jump_statement: CONTINUE SEMI .

    $default  reduce using rule 57 (jump_statement)


state 76

   14 primary_expression: SIZEOF LP . type_specifier RP

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    type_specifier  go to state 102


state 77

   53 expression_statement: expression SEMI .

    $default  reduce using rule 53 (expression_statement)


state 78

    3 expression: expression COMMA . assignment_expression
    4           | expression COMMA . logical_or_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    assignment_expression      go to state 103
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 104


state 79

   16 multiplicative_expression: multiplicative_expression MUL . primary_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression  go to state 106


state 80

   17 multiplicative_expression: multiplicative_expression DIV . primary_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression  go to state 107


state 81

   18 multiplicative_expression: multiplicative_expression MOD . primary_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression  go to state 108


state 82

   20 additive_expression: additive_expression PLUS . multiplicative_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression         go to state 48
    multiplicative_expression  go to state 109


state 83

   21 additive_expression: additive_expression MINUS . multiplicative_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression         go to state 48
    multiplicative_expression  go to state 110


state 84

   26 relational_expression: relational_expression GE . additive_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 111


state 85

   25 relational_expression: relational_expression LE . additive_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 112


state 86

   24 relational_expression: relational_expression GT . additive_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 113


state 87

   23 relational_expression: relational_expression LT . additive_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 114


state 88

   29 equality_expression: equality_expression NE . relational_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 115


state 89

   28 equality_expression: equality_expression EQ . relational_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 116


state 90

   31 logical_and_expression: logical_and_expression AND . equality_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 117


state 91

   33 logical_or_expression: logical_or_expression OR . logical_and_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 105
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 118


state 92

   47 compound_statement: LCB block_item_list RCB .

    $default  reduce using rule 47 (compound_statement)


state 93

   49 block_item_list: block_item_list block_item .

    $default  reduce using rule 49 (block_item_list)


state 94

    3 expression: expression . COMMA assignment_expression
    4           | expression . COMMA logical_or_expression
    7 assignment_expression: ID_E LSB expression . RSB ASSIGN logical_or_expression
    8                      | ID_E LSB expression . RSB ASSIGN assignment_expression

    RSB    shift, and go to state 119
    COMMA  shift, and go to state 78


state 95

    6 assignment_expression: ID_E ASSIGN assignment_expression .

    $default  reduce using rule 6 (assignment_expression)


state 96

    5 assignment_expression: ID_E ASSIGN logical_or_expression .
   33 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 91

    $default  reduce using rule 5 (assignment_expression)


state 97

   13 primary_expression: LP expression RP .

    $default  reduce using rule 13 (primary_expression)


state 98

    3 expression: expression . COMMA assignment_expression
    4           | expression . COMMA logical_or_expression
   54 selection_statement: IF LP expression . RP statement ELSE statement

    RP     shift, and go to state 120
    COMMA  shift, and go to state 78


state 99

    3 expression: expression . COMMA assignment_expression
    4           | expression . COMMA logical_or_expression
   55 iteration_statement: WHILE LP expression . RP statement

    RP     shift, and go to state 121
    COMMA  shift, and go to state 78


state 100

   56 iteration_statement: FOR LP expression_statement . expression_statement expression RP statement

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SEMI    shift, and go to state 38
    SIZEOF  shift, and go to state 45

    expression                 go to state 46
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54
    expression_statement       go to state 122


state 101

   60 jump_statement: RETURN expression SEMI .

    $default  reduce using rule 60 (jump_statement)


state 102

   14 primary_expression: SIZEOF LP type_specifier . RP

    RP  shift, and go to state 123


state 103

    3 expression: expression COMMA assignment_expression .

    $default  reduce using rule 3 (expression)


state 104

    4 expression: expression COMMA logical_or_expression .
   33 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 91

    $default  reduce using rule 4 (expression)


state 105

    9 primary_expression: ID_E .

    $default  reduce using rule 9 (primary_expression)


state 106

   16 multiplicative_expression: multiplicative_expression MUL primary_expression .

    $default  reduce using rule 16 (multiplicative_expression)


state 107

   17 multiplicative_expression: multiplicative_expression DIV primary_expression .

    $default  reduce using rule 17 (multiplicative_expression)


state 108

   18 multiplicative_expression: multiplicative_expression MOD primary_expression .

    $default  reduce using rule 18 (multiplicative_expression)


state 109

   16 multiplicative_expression: multiplicative_expression . MUL primary_expression
   17                          | multiplicative_expression . DIV primary_expression
   18                          | multiplicative_expression . MOD primary_expression
   20 additive_expression: additive_expression PLUS multiplicative_expression .

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 20 (additive_expression)


state 110

   16 multiplicative_expression: multiplicative_expression . MUL primary_expression
   17                          | multiplicative_expression . DIV primary_expression
   18                          | multiplicative_expression . MOD primary_expression
   21 additive_expression: additive_expression MINUS multiplicative_expression .

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 21 (additive_expression)


state 111

   20 additive_expression: additive_expression . PLUS multiplicative_expression
   21                    | additive_expression . MINUS multiplicative_expression
   26 relational_expression: relational_expression GE additive_expression .

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 26 (relational_expression)


state 112

   20 additive_expression: additive_expression . PLUS multiplicative_expression
   21                    | additive_expression . MINUS multiplicative_expression
   25 relational_expression: relational_expression LE additive_expression .

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 25 (relational_expression)


state 113

   20 additive_expression: additive_expression . PLUS multiplicative_expression
   21                    | additive_expression . MINUS multiplicative_expression
   24 relational_expression: relational_expression GT additive_expression .

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 24 (relational_expression)


state 114

   20 additive_expression: additive_expression . PLUS multiplicative_expression
   21                    | additive_expression . MINUS multiplicative_expression
   23 relational_expression: relational_expression LT additive_expression .

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 23 (relational_expression)


state 115

   23 relational_expression: relational_expression . LT additive_expression
   24                      | relational_expression . GT additive_expression
   25                      | relational_expression . LE additive_expression
   26                      | relational_expression . GE additive_expression
   29 equality_expression: equality_expression NE relational_expression .

    GE  shift, and go to state 84
    LE  shift, and go to state 85
    GT  shift, and go to state 86
    LT  shift, and go to state 87

    $default  reduce using rule 29 (equality_expression)


state 116

   23 relational_expression: relational_expression . LT additive_expression
   24                      | relational_expression . GT additive_expression
   25                      | relational_expression . LE additive_expression
   26                      | relational_expression . GE additive_expression
   28 equality_expression: equality_expression EQ relational_expression .

    GE  shift, and go to state 84
    LE  shift, and go to state 85
    GT  shift, and go to state 86
    LT  shift, and go to state 87

    $default  reduce using rule 28 (equality_expression)


state 117

   28 equality_expression: equality_expression . EQ relational_expression
   29                    | equality_expression . NE relational_expression
   31 logical_and_expression: logical_and_expression AND equality_expression .

    NE  shift, and go to state 88
    EQ  shift, and go to state 89

    $default  reduce using rule 31 (logical_and_expression)


state 118

   31 logical_and_expression: logical_and_expression . AND equality_expression
   33 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 90

    $default  reduce using rule 33 (logical_or_expression)


state 119

    7 assignment_expression: ID_E LSB expression RSB . ASSIGN logical_or_expression
    8                      | ID_E LSB expression RSB . ASSIGN assignment_expression

    ASSIGN  shift, and go to state 124


state 120

   54 selection_statement: IF LP expression RP . statement ELSE statement

    IVAL      shift, and go to state 32
    CVAL      shift, and go to state 33
    FVAL      shift, and go to state 34
    ID_E      shift, and go to state 35
    LP        shift, and go to state 36
    LCB       shift, and go to state 26
    SEMI      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    FOR       shift, and go to state 41
    BREAK     shift, and go to state 42
    RETURN    shift, and go to state 43
    CONTINUE  shift, and go to state 44
    SIZEOF    shift, and go to state 45

    expression                 go to state 46
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54
    statement                  go to state 125
    compound_statement         go to state 57
    expression_statement       go to state 60
    selection_statement        go to state 61
    iteration_statement        go to state 62
    jump_statement             go to state 63


state 121

   55 iteration_statement: WHILE LP expression RP . statement

    IVAL      shift, and go to state 32
    CVAL      shift, and go to state 33
    FVAL      shift, and go to state 34
    ID_E      shift, and go to state 35
    LP        shift, and go to state 36
    LCB       shift, and go to state 26
    SEMI      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    FOR       shift, and go to state 41
    BREAK     shift, and go to state 42
    RETURN    shift, and go to state 43
    CONTINUE  shift, and go to state 44
    SIZEOF    shift, and go to state 45

    expression                 go to state 46
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54
    statement                  go to state 126
    compound_statement         go to state 57
    expression_statement       go to state 60
    selection_statement        go to state 61
    iteration_statement        go to state 62
    jump_statement             go to state 63


state 122

   56 iteration_statement: FOR LP expression_statement expression_statement . expression RP statement

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    expression                 go to state 127
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54


state 123

   14 primary_expression: SIZEOF LP type_specifier RP .

    $default  reduce using rule 14 (primary_expression)


state 124

    7 assignment_expression: ID_E LSB expression RSB ASSIGN . logical_or_expression
    8                      | ID_E LSB expression RSB ASSIGN . assignment_expression

    IVAL    shift, and go to state 32
    CVAL    shift, and go to state 33
    FVAL    shift, and go to state 34
    ID_E    shift, and go to state 35
    LP      shift, and go to state 36
    SIZEOF  shift, and go to state 45

    assignment_expression      go to state 128
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 129


state 125

   54 selection_statement: IF LP expression RP statement . ELSE statement

    ELSE  shift, and go to state 130


state 126

   55 iteration_statement: WHILE LP expression RP statement .

    $default  reduce using rule 55 (iteration_statement)


state 127

    3 expression: expression . COMMA assignment_expression
    4           | expression . COMMA logical_or_expression
   56 iteration_statement: FOR LP expression_statement expression_statement expression . RP statement

    RP     shift, and go to state 131
    COMMA  shift, and go to state 78


state 128

    8 assignment_expression: ID_E LSB expression RSB ASSIGN assignment_expression .

    $default  reduce using rule 8 (assignment_expression)


state 129

    7 assignment_expression: ID_E LSB expression RSB ASSIGN logical_or_expression .
   33 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 91

    $default  reduce using rule 7 (assignment_expression)


state 130

   54 selection_statement: IF LP expression RP statement ELSE . statement

    IVAL      shift, and go to state 32
    CVAL      shift, and go to state 33
    FVAL      shift, and go to state 34
    ID_E      shift, and go to state 35
    LP        shift, and go to state 36
    LCB       shift, and go to state 26
    SEMI      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    FOR       shift, and go to state 41
    BREAK     shift, and go to state 42
    RETURN    shift, and go to state 43
    CONTINUE  shift, and go to state 44
    SIZEOF    shift, and go to state 45

    expression                 go to state 46
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54
    statement                  go to state 132
    compound_statement         go to state 57
    expression_statement       go to state 60
    selection_statement        go to state 61
    iteration_statement        go to state 62
    jump_statement             go to state 63


state 131

   56 iteration_statement: FOR LP expression_statement expression_statement expression RP . statement

    IVAL      shift, and go to state 32
    CVAL      shift, and go to state 33
    FVAL      shift, and go to state 34
    ID_E      shift, and go to state 35
    LP        shift, and go to state 36
    LCB       shift, and go to state 26
    SEMI      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    FOR       shift, and go to state 41
    BREAK     shift, and go to state 42
    RETURN    shift, and go to state 43
    CONTINUE  shift, and go to state 44
    SIZEOF    shift, and go to state 45

    expression                 go to state 46
    assignment_expression      go to state 47
    primary_expression         go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    logical_and_expression     go to state 53
    logical_or_expression      go to state 54
    statement                  go to state 133
    compound_statement         go to state 57
    expression_statement       go to state 60
    selection_statement        go to state 61
    iteration_statement        go to state 62
    jump_statement             go to state 63


state 132

   54 selection_statement: IF LP expression RP statement ELSE statement .

    $default  reduce using rule 54 (selection_statement)


state 133

   56 iteration_statement: FOR LP expression_statement expression_statement expression RP statement .

    $default  reduce using rule 56 (iteration_statement)
